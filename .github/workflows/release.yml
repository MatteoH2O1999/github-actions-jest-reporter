name: Release

on:
  push:
    tags:
      - "**"

jobs:
  test:
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    name: Test node ${{ matrix.node-version }} on ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install production and development dependencies
        run: npm ci
      - name: Run Tests
        run: npm run test
        env:
          FORCE_COLOR: 3
  lint_and_build:
    runs-on: ubuntu-latest
    name: Lint and build code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Check prettier format
        run: npm run format-check
      - name: Check eslint
        run: npm run lint
      - name: Build Typescript
        run: npm run build
  build_and_release:
    runs-on: ubuntu-latest
    needs: [test, lint_and_build]
    name: Build and release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: npm ci
      - name: Build Typescript
        run: npm run build
      - name: Publish package to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}